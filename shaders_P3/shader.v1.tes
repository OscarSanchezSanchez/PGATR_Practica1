#version 400

layout(quads, equal_spacing, ccw) in;
 
in vec3 tcNormal[];

out vec3 teNormal;

//quad interpolation
vec4 interpolate1(in vec4 v0, in vec4 v1, in vec4 v2, in vec4 v3)
{
 vec4 a = mix(v0, v1, gl_TessCoord.x);
 vec4 b = mix(v3, v2, gl_TessCoord.x);
 return mix(a, b, gl_TessCoord.y);
}

//normal interpolation
vec3 interpolate2(in vec3 v0, in vec3 v1, in vec3 v2, in vec3 v3)
{
 vec3 a = mix(v0, v1, gl_TessCoord.x);
 vec3 b = mix(v3, v2, gl_TessCoord.x);
 return mix(a, b, gl_TessCoord.y);
}

void main()
{ 
 gl_Position = interpolate1(gl_in[0].gl_Position, gl_in[1].gl_Position, gl_in[2].gl_Position, gl_in[3].gl_Position);

 teNormal = interpolate2(tcNormal[0], tcNormal[1], tcNormal[2], tcNormal[3]);
}