#version 430 compatibility
#extension GL_ARB_compute_shader: enable
#extension GL_ARB_shader_storage_buffer_object: enable

layout (std140, binding=4) buffer Pos
{
	vec4 Positions[ ];
};

layout (std140, binding=5) buffer Vel
{
	vec4 Velocities[ ];
};

layout (std140, binding=6) buffer Old
{
	vec4 oldPositions[ ];
};

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

const float dt = 0.001;
float G = 6.674 * pow(10, -11);
float M1 = 10000000000.0;

uint gid = gl_GlobalInvocationID.x;

vec3 x0;
vec3 v0;

void main()
{
	vec3 x = Positions[gid].xyz;
	vec3 v = Velocities[gid].xyz;

	x0 = x;
	v0 = v;

	float d = distance(x, vec3(0.0f));
	vec3 acelGrav = -G * M1 * (1 / (d * d * d)) * x;

	vec3 vp = v + 0.5*dt*acelGrav;
	vec3 xp = x + 0.5 * dt * vp;

	d = distance(xp, vec3(0.0f));
	acelGrav = -G * M1 * (1 / (d * d * d)) * xp;

	xp = x0 + vp*dt;
	vp = v0 + acelGrav*dt;

	//oldPositions[gid].xyz = p;
	Positions[gid].xyz = xp;
	Velocities[gid].xyz = vp;
}