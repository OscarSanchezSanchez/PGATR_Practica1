#version 430 compatibility
#extension GL_ARB_compute_shader: enable
#extension GL_ARB_shader_storage_buffer_object: enable

layout (std140, binding=4) buffer Pos
{
	vec4 Positions[ ];
};

layout (std140, binding=5) buffer Vel
{
	vec4 Velocities[ ];
};

layout (std140, binding=6) buffer Col
{
	vec4 Colors[ ];
};

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

const vec3 g = vec3(0., 0., 0.);
const float dt = 0.001;
float G = 6.674 * pow(10, -11);
float M1 = 100000000000.0;

uint gid = gl_GlobalInvocationID.x;

void main()
{
	vec3 p = Positions[gid].xyz;
	vec3 v = Velocities[gid].xyz;

	float d = distance(p, vec3(0.0f));
	vec3 acelGrav = -G * M1 * (1 / (d * d * d)) * p;

	vec3 vp = v + acelGrav*dt;
	vec3 pp = p + vp * dt + 0.5*dt*dt*acelGrav;
	

	Positions[gid].xyz = pp;
	Velocities[gid].xyz = vp;
}